<?xml version="1.0" encoding="ASCII"?>
<xcore:CompositeComponent xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xcore="uk.xman.xcore" name="SpeedControl">
  <services name="speedControlService">
    <parameters xsi:type="xcore:Input" name="clearance" dataType="Float" dataChannels="//@dataChannels.1" order="0"/>
    <parameters xsi:type="xcore:Input" name="safetyDistance" dataType="Float" dataChannels="//@dataChannels.2" order="0"/>
    <parameters xsi:type="xcore:Input" name="speedDifference" dataChannels="//@dataChannels.3 //@dataChannels.4 //@dataChannels.5 //@dataChannels.22 //@dataChannels.25 //@dataChannels.28 //@dataChannels.34 //@dataChannels.35" order="0"/>
    <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@dataChannels.6 //@dataChannels.7 //@dataChannels.8 //@dataChannels.9 //@dataChannels.10 //@dataChannels.11 //@dataChannels.12 //@dataChannels.13 //@dataChannels.23 //@dataChannels.26 //@dataChannels.29 //@dataChannels.33 //@dataChannels.37" order="0"/>
    <parameters xsi:type="xcore:Output" name="updatedSpeed" dataType="Float" dataChannels="//@dataChannels.14 //@dataChannels.15 //@dataChannels.16 //@dataChannels.17 //@dataChannels.18 //@dataChannels.19 //@dataChannels.20 //@dataChannels.21 //@dataChannels.24 //@dataChannels.27 //@dataChannels.30 //@dataChannels.32 //@dataChannels.38" order="0"/>
    <serviceReferences name="zoneCalculator.calculateZone" service="//@composables.1/@selectedServices.0"/>
    <serviceReferences name="zoneSelector.zoneSelector_Service"/>
  </services>
  <composables xsi:type="xcore:Sequencer" name="SEQUENCER" showedName="SEQUENCER" connections="//@connections.0 //@connections.1 //@connections.16 //@connections.17"/>
  <composables xsi:type="xcore:ComponentInstance" name="zoneCalculator" componentType="ZoneCalculator">
    <selectedServices name="calculateZone">
      <parameters xsi:type="xcore:Input" name="clearance" dataType="Float" dataChannels="//@dataChannels.1" order="0"/>
      <parameters xsi:type="xcore:Input" name="safetyDistance" dataType="Float" dataChannels="//@dataChannels.2" order="1"/>
      <parameters xsi:type="xcore:Output" name="zone" dataChannels="//@dataChannels.0 //@dataChannels.31 //@dataChannels.36" order="2"/>
    </selectedServices>
    <componentReference xsi:type="xcore:AtomicComponent" name="ZoneCalculator">
      <services name="calculateZone">
        <parameters xsi:type="xcore:Input" name="clearance" dataType="Float" order="1"/>
        <parameters xsi:type="xcore:Input" name="safetyDistance" dataType="Float" order="1"/>
        <parameters xsi:type="xcore:Output" name="zone" order="1"/>
      </services>
      <computationUnit interfaceCode="/*&#xA;&#x9;&#x9;* This is Java interface of the component ZoneCalculator&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public interface ZoneCalculator {public  Integer  calculateZone (&#xA;    &#x9;&#x9;Float clearance, &#xA;    &#x9;&#x9;    &#x9;&#x9;Float safetyDistance&#xA;    &#x9;&#x9; ); &#xA;}" sourceCode="/*&#xA;&#x9;&#x9;* This is Java implementation of the atomic component ac.getName&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;IF !ac.getComputationUnit.getPackageName.emptypackage ac.getComputationUnit.getPackageName;ENDIF&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public class ac.getNameSUFFIX implements ac.getName {&#xA;/**&#xA; * Constructor of atomic component c.getName&#xA; */&#xA;public c.getNameSUFFIX(IF !dataElements.empty Map&lt;String, Object> vals ENDIF) {&#xA;FOR de : dataElements&#xA;&#x9;this._de.getName = (de.getDataType) vals.get(&quot;de.getName&quot;);&#xA;ENDFOR &#xA;}public  outputs.get(0).getDataType.toString  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}}"/>
    </componentReference>
  </composables>
  <composables xsi:type="xcore:ComponentInstance" name="zoneSelector" componentType="ZoneSelector">
    <selectedServices name="zoneSelector_service">
      <parameters xsi:type="xcore:Input" name="zone" dataChannels="//@dataChannels.36" order="0"/>
      <parameters xsi:type="xcore:Input" name="speedDifference" dataChannels="//@dataChannels.35" order="1"/>
      <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@dataChannels.37" order="2"/>
      <parameters xsi:type="xcore:Output" name="updatedSpeed" dataType="Float" dataChannels="//@dataChannels.38" order="3"/>
    </selectedServices>
    <componentReference xsi:type="xcore:CompositeComponent" name="ZoneSelector">
      <services name="zoneSelector_service">
        <parameters xsi:type="xcore:Input" name="zone" dataChannels="//@composables.2/@componentReference/@dataChannels.0" order="0"/>
        <parameters xsi:type="xcore:Input" name="speedDifference" dataChannels="//@composables.2/@componentReference/@dataChannels.1 //@composables.2/@componentReference/@dataChannels.2 //@composables.2/@componentReference/@dataChannels.3" order="0"/>
        <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@dataChannels.4 //@composables.2/@componentReference/@dataChannels.5 //@composables.2/@componentReference/@dataChannels.6 //@composables.2/@componentReference/@dataChannels.7 //@composables.2/@componentReference/@dataChannels.8" order="0"/>
        <parameters xsi:type="xcore:Output" name="updatedSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@dataChannels.9 //@composables.2/@componentReference/@dataChannels.10 //@composables.2/@componentReference/@dataChannels.11 //@composables.2/@componentReference/@dataChannels.12 //@composables.2/@componentReference/@dataChannels.13" order="0"/>
        <serviceReferences name="zoneD.zoneD_service" service="//@composables.2/@componentReference/@composables.1/@selectedServices.0"/>
        <serviceReferences name="zoneC.zoneC_service" service="//@composables.2/@componentReference/@composables.2/@selectedServices.0"/>
        <serviceReferences name="zoneB.zoneB_service" service="//@composables.2/@componentReference/@composables.3/@selectedServices.0"/>
        <serviceReferences name="zoneA.applyBrakes" service="//@composables.2/@componentReference/@composables.4/@selectedServices.0"/>
        <serviceReferences name="dangerZone.applyEmergencyBrakes" service="//@composables.2/@componentReference/@composables.5/@selectedServices.0"/>
      </services>
      <composables xsi:type="xcore:Selector" name="SEL_1" showedName="SEL_1" connections="//@composables.2/@componentReference/@connections.0 //@composables.2/@componentReference/@connections.1 //@composables.2/@componentReference/@connections.2 //@composables.2/@componentReference/@connections.3 //@composables.2/@componentReference/@connections.4">
        <input name="zone" dataChannels="//@composables.2/@componentReference/@dataChannels.0" order="0"/>
      </composables>
      <composables xsi:type="xcore:ComponentInstance" name="zoneD" componentType="ZoneD">
        <selectedServices name="zoneD_service">
          <parameters xsi:type="xcore:Input" name="speedDifference" dataChannels="//@composables.2/@componentReference/@dataChannels.3" order="0"/>
          <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@dataChannels.8" order="1"/>
          <parameters xsi:type="xcore:Output" name="updatedSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@dataChannels.9" order="2"/>
        </selectedServices>
        <componentReference xsi:type="xcore:CompositeComponent" name="ZoneD">
          <services name="zoneD_service">
            <parameters xsi:type="xcore:Input" name="speedDifference" dataChannels="//@composables.2/@componentReference/@composables.1/@componentReference/@dataChannels.0" order="0"/>
            <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@composables.1/@componentReference/@dataChannels.1 //@composables.2/@componentReference/@composables.1/@componentReference/@dataChannels.2" order="0"/>
            <parameters xsi:type="xcore:Output" name="updatedSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@composables.1/@componentReference/@dataChannels.3 //@composables.2/@componentReference/@composables.1/@componentReference/@dataChannels.4" order="0"/>
            <serviceReferences name="accelerator1.decelerate" service="//@composables.2/@componentReference/@composables.1/@componentReference/@composables.1/@selectedServices.0"/>
            <serviceReferences name="accelerator2.accelerate" service="//@composables.2/@componentReference/@composables.1/@componentReference/@composables.2/@selectedServices.0"/>
          </services>
          <composables xsi:type="xcore:Selector" name="SEL_1" showedName="SEL_1" connections="//@composables.2/@componentReference/@composables.1/@componentReference/@connections.0 //@composables.2/@componentReference/@composables.1/@componentReference/@connections.1">
            <input name="speedDifference" dataChannels="//@composables.2/@componentReference/@composables.1/@componentReference/@dataChannels.0" order="0"/>
          </composables>
          <composables xsi:type="xcore:ComponentInstance" name="accelerator1" componentType="Accelerator">
            <selectedServices name="decelerate">
              <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@composables.1/@componentReference/@dataChannels.1" order="0"/>
              <parameters xsi:type="xcore:Output" name="deceleratedSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@composables.1/@componentReference/@dataChannels.4" order="1"/>
            </selectedServices>
            <componentReference xsi:type="xcore:AtomicComponent" name="Accelerator">
              <services name="accelerate">
                <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                <parameters xsi:type="xcore:Output" name="acceleratedSpeed" dataType="Float" order="1"/>
              </services>
              <services name="decelerate">
                <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                <parameters xsi:type="xcore:Output" name="deceleratedSpeed" dataType="Float" order="1"/>
              </services>
              <computationUnit interfaceCode="/*&#xA;&#x9;&#x9;* This is Java interface of the component Accelerator&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public interface Accelerator {public  Float  accelerate (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;public  Float  decelerate (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;}" sourceCode="/*&#xA;&#x9;&#x9;* This is Java implementation of the atomic component ac.getName&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;IF !ac.getComputationUnit.getPackageName.emptypackage ac.getComputationUnit.getPackageName;ENDIF&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public class ac.getNameSUFFIX implements ac.getName {&#xA;/**&#xA; * Constructor of atomic component c.getName&#xA; */&#xA;public c.getNameSUFFIX(IF !dataElements.empty Map&lt;String, Object> vals ENDIF) {&#xA;FOR de : dataElements&#xA;&#x9;this._de.getName = (de.getDataType) vals.get(&quot;de.getName&quot;);&#xA;ENDFOR &#xA;}public  void  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}public  void  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}}"/>
            </componentReference>
          </composables>
          <composables xsi:type="xcore:ComponentInstance" name="accelerator2" componentType="Accelerator">
            <selectedServices name="accelerate">
              <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@composables.1/@componentReference/@dataChannels.2" order="0"/>
              <parameters xsi:type="xcore:Output" name="acceleratedSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@composables.1/@componentReference/@dataChannels.3" order="1"/>
            </selectedServices>
            <componentReference xsi:type="xcore:AtomicComponent" name="Accelerator">
              <services name="accelerate">
                <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                <parameters xsi:type="xcore:Output" name="acceleratedSpeed" dataType="Float" order="1"/>
              </services>
              <services name="decelerate">
                <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                <parameters xsi:type="xcore:Output" name="deceleratedSpeed" dataType="Float" order="1"/>
              </services>
              <computationUnit interfaceCode="/*&#xA;&#x9;&#x9;* This is Java interface of the component Accelerator&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public interface Accelerator {public  Float  accelerate (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;public  Float  decelerate (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;}" sourceCode="/*&#xA;&#x9;&#x9;* This is Java implementation of the atomic component ac.getName&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;IF !ac.getComputationUnit.getPackageName.emptypackage ac.getComputationUnit.getPackageName;ENDIF&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public class ac.getNameSUFFIX implements ac.getName {&#xA;/**&#xA; * Constructor of atomic component c.getName&#xA; */&#xA;public c.getNameSUFFIX(IF !dataElements.empty Map&lt;String, Object> vals ENDIF) {&#xA;FOR de : dataElements&#xA;&#x9;this._de.getName = (de.getDataType) vals.get(&quot;de.getName&quot;);&#xA;ENDFOR &#xA;}public  void  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}public  void  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}}"/>
            </componentReference>
          </composables>
          <connections xsi:type="xcore:CoordinationConnection" condition="speedDifference == 0" source="//@composables.2/@componentReference/@composables.1/@componentReference/@composables.0" target="//@composables.2/@componentReference/@composables.1/@componentReference/@composables.1"/>
          <connections xsi:type="xcore:CoordinationConnection" condition="speedDifference == 1" source="//@composables.2/@componentReference/@composables.1/@componentReference/@composables.0" target="//@composables.2/@componentReference/@composables.1/@componentReference/@composables.2"/>
          <dataChannels source="//@composables.2/@componentReference/@composables.1/@componentReference/@services.0/@parameters.0" target="//@composables.2/@componentReference/@composables.1/@componentReference/@composables.0/@input.0"/>
          <dataChannels source="//@composables.2/@componentReference/@composables.1/@componentReference/@services.0/@parameters.1" target="//@composables.2/@componentReference/@composables.1/@componentReference/@composables.1/@selectedServices.0/@parameters.0"/>
          <dataChannels source="//@composables.2/@componentReference/@composables.1/@componentReference/@services.0/@parameters.1" target="//@composables.2/@componentReference/@composables.1/@componentReference/@composables.2/@selectedServices.0/@parameters.0"/>
          <dataChannels source="//@composables.2/@componentReference/@composables.1/@componentReference/@composables.2/@selectedServices.0/@parameters.1" target="//@composables.2/@componentReference/@composables.1/@componentReference/@services.0/@parameters.2"/>
          <dataChannels source="//@composables.2/@componentReference/@composables.1/@componentReference/@composables.1/@selectedServices.0/@parameters.1" target="//@composables.2/@componentReference/@composables.1/@componentReference/@services.0/@parameters.2"/>
        </componentReference>
      </composables>
      <composables xsi:type="xcore:ComponentInstance" name="zoneC" componentType="ZoneC">
        <selectedServices name="zoneC_service">
          <parameters xsi:type="xcore:Input" name="speedDifference" dataChannels="//@composables.2/@componentReference/@dataChannels.2" order="0"/>
          <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@dataChannels.7" order="1"/>
          <parameters xsi:type="xcore:Output" name="updatedSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@dataChannels.10" order="2"/>
        </selectedServices>
        <componentReference xsi:type="xcore:CompositeComponent" name="ZoneC">
          <services name="zoneC_service">
            <parameters xsi:type="xcore:Input" name="speedDifference" dataChannels="//@composables.2/@componentReference/@composables.2/@componentReference/@dataChannels.0" order="0"/>
            <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@composables.2/@componentReference/@dataChannels.1 //@composables.2/@componentReference/@composables.2/@componentReference/@dataChannels.2" order="0"/>
            <parameters xsi:type="xcore:Output" name="updatedSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@composables.2/@componentReference/@dataChannels.3 //@composables.2/@componentReference/@composables.2/@componentReference/@dataChannels.4" order="0"/>
            <serviceReferences name="accelerator1.decelerate" service="//@composables.2/@componentReference/@composables.2/@componentReference/@composables.1/@selectedServices.0"/>
            <serviceReferences name="accelerator2.accelerate" service="//@composables.2/@componentReference/@composables.2/@componentReference/@composables.2/@selectedServices.0"/>
          </services>
          <composables xsi:type="xcore:Selector" name="SEL_1" showedName="SEL_1" connections="//@composables.2/@componentReference/@composables.2/@componentReference/@connections.0 //@composables.2/@componentReference/@composables.2/@componentReference/@connections.1">
            <input name="speedDifference" dataChannels="//@composables.2/@componentReference/@composables.2/@componentReference/@dataChannels.0" order="0"/>
          </composables>
          <composables xsi:type="xcore:ComponentInstance" name="accelerator1" componentType="Accelerator">
            <selectedServices name="decelerate">
              <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@composables.2/@componentReference/@dataChannels.1" order="0"/>
              <parameters xsi:type="xcore:Output" name="deceleratedSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@composables.2/@componentReference/@dataChannels.4" order="1"/>
            </selectedServices>
            <componentReference xsi:type="xcore:AtomicComponent" name="Accelerator">
              <services name="accelerate">
                <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                <parameters xsi:type="xcore:Output" name="acceleratedSpeed" dataType="Float" order="1"/>
              </services>
              <services name="decelerate">
                <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                <parameters xsi:type="xcore:Output" name="deceleratedSpeed" dataType="Float" order="1"/>
              </services>
              <computationUnit interfaceCode="/*&#xA;&#x9;&#x9;* This is Java interface of the component Accelerator&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public interface Accelerator {public  Float  accelerate (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;public  Float  decelerate (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;}" sourceCode="/*&#xA;&#x9;&#x9;* This is Java implementation of the atomic component ac.getName&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;IF !ac.getComputationUnit.getPackageName.emptypackage ac.getComputationUnit.getPackageName;ENDIF&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public class ac.getNameSUFFIX implements ac.getName {&#xA;/**&#xA; * Constructor of atomic component c.getName&#xA; */&#xA;public c.getNameSUFFIX(IF !dataElements.empty Map&lt;String, Object> vals ENDIF) {&#xA;FOR de : dataElements&#xA;&#x9;this._de.getName = (de.getDataType) vals.get(&quot;de.getName&quot;);&#xA;ENDFOR &#xA;}public  void  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}public  void  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}}"/>
            </componentReference>
          </composables>
          <composables xsi:type="xcore:ComponentInstance" name="accelerator2" componentType="Accelerator">
            <selectedServices name="accelerate">
              <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@composables.2/@componentReference/@dataChannels.2" order="0"/>
              <parameters xsi:type="xcore:Output" name="acceleratedSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@composables.2/@componentReference/@dataChannels.3" order="1"/>
            </selectedServices>
            <componentReference xsi:type="xcore:AtomicComponent" name="Accelerator">
              <services name="accelerate">
                <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                <parameters xsi:type="xcore:Output" name="acceleratedSpeed" dataType="Float" order="1"/>
              </services>
              <services name="decelerate">
                <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                <parameters xsi:type="xcore:Output" name="deceleratedSpeed" dataType="Float" order="1"/>
              </services>
              <computationUnit interfaceCode="/*&#xA;&#x9;&#x9;* This is Java interface of the component Accelerator&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public interface Accelerator {public  Float  accelerate (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;public  Float  decelerate (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;}" sourceCode="/*&#xA;&#x9;&#x9;* This is Java implementation of the atomic component ac.getName&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;IF !ac.getComputationUnit.getPackageName.emptypackage ac.getComputationUnit.getPackageName;ENDIF&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public class ac.getNameSUFFIX implements ac.getName {&#xA;/**&#xA; * Constructor of atomic component c.getName&#xA; */&#xA;public c.getNameSUFFIX(IF !dataElements.empty Map&lt;String, Object> vals ENDIF) {&#xA;FOR de : dataElements&#xA;&#x9;this._de.getName = (de.getDataType) vals.get(&quot;de.getName&quot;);&#xA;ENDFOR &#xA;}public  void  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}public  void  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}}"/>
            </componentReference>
          </composables>
          <connections xsi:type="xcore:CoordinationConnection" condition="speedDifference == 0" source="//@composables.2/@componentReference/@composables.2/@componentReference/@composables.0" target="//@composables.2/@componentReference/@composables.2/@componentReference/@composables.1"/>
          <connections xsi:type="xcore:CoordinationConnection" condition="speedDifference == 1" source="//@composables.2/@componentReference/@composables.2/@componentReference/@composables.0" target="//@composables.2/@componentReference/@composables.2/@componentReference/@composables.2"/>
          <dataChannels source="//@composables.2/@componentReference/@composables.2/@componentReference/@services.0/@parameters.0" target="//@composables.2/@componentReference/@composables.2/@componentReference/@composables.0/@input.0"/>
          <dataChannels source="//@composables.2/@componentReference/@composables.2/@componentReference/@services.0/@parameters.1" target="//@composables.2/@componentReference/@composables.2/@componentReference/@composables.1/@selectedServices.0/@parameters.0"/>
          <dataChannels source="//@composables.2/@componentReference/@composables.2/@componentReference/@services.0/@parameters.1" target="//@composables.2/@componentReference/@composables.2/@componentReference/@composables.2/@selectedServices.0/@parameters.0"/>
          <dataChannels source="//@composables.2/@componentReference/@composables.2/@componentReference/@composables.2/@selectedServices.0/@parameters.1" target="//@composables.2/@componentReference/@composables.2/@componentReference/@services.0/@parameters.2"/>
          <dataChannels source="//@composables.2/@componentReference/@composables.2/@componentReference/@composables.1/@selectedServices.0/@parameters.1" target="//@composables.2/@componentReference/@composables.2/@componentReference/@services.0/@parameters.2"/>
        </componentReference>
      </composables>
      <composables xsi:type="xcore:ComponentInstance" name="zoneB" componentType="ZoneB">
        <selectedServices name="zoneB_service">
          <parameters xsi:type="xcore:Input" name="speedDifference" dataChannels="//@composables.2/@componentReference/@dataChannels.1" order="0"/>
          <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@dataChannels.6" order="1"/>
          <parameters xsi:type="xcore:Output" name="updatedSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@dataChannels.11" order="2"/>
        </selectedServices>
        <componentReference xsi:type="xcore:CompositeComponent" name="ZoneB">
          <services name="zoneB_service">
            <parameters xsi:type="xcore:Input" name="speedDifference" dataChannels="//@composables.2/@componentReference/@composables.3/@componentReference/@dataChannels.0" order="0"/>
            <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@composables.3/@componentReference/@dataChannels.1 //@composables.2/@componentReference/@composables.3/@componentReference/@dataChannels.2" order="0"/>
            <parameters xsi:type="xcore:Output" name="updatedSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@composables.3/@componentReference/@dataChannels.3 //@composables.2/@componentReference/@composables.3/@componentReference/@dataChannels.4" order="0"/>
            <serviceReferences name="accelerator1.decelerate" service="//@composables.2/@componentReference/@composables.3/@componentReference/@composables.1/@selectedServices.0"/>
            <serviceReferences name="accelerator2.accelerate" service="//@composables.2/@componentReference/@composables.3/@componentReference/@composables.2/@selectedServices.0"/>
          </services>
          <composables xsi:type="xcore:Selector" name="SEL_1" showedName="SEL_1" connections="//@composables.2/@componentReference/@composables.3/@componentReference/@connections.0 //@composables.2/@componentReference/@composables.3/@componentReference/@connections.1">
            <input name="speedDifference" dataChannels="//@composables.2/@componentReference/@composables.3/@componentReference/@dataChannels.0" order="0"/>
          </composables>
          <composables xsi:type="xcore:ComponentInstance" name="accelerator1" componentType="Accelerator">
            <selectedServices name="decelerate">
              <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@composables.3/@componentReference/@dataChannels.1" order="0"/>
              <parameters xsi:type="xcore:Output" name="deceleratedSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@composables.3/@componentReference/@dataChannels.4" order="1"/>
            </selectedServices>
            <componentReference xsi:type="xcore:AtomicComponent" name="Accelerator">
              <services name="accelerate">
                <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                <parameters xsi:type="xcore:Output" name="acceleratedSpeed" dataType="Float" order="1"/>
              </services>
              <services name="decelerate">
                <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                <parameters xsi:type="xcore:Output" name="deceleratedSpeed" dataType="Float" order="1"/>
              </services>
              <computationUnit interfaceCode="/*&#xA;&#x9;&#x9;* This is Java interface of the component Accelerator&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public interface Accelerator {public  Float  accelerate (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;public  Float  decelerate (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;}" sourceCode="/*&#xA;&#x9;&#x9;* This is Java implementation of the atomic component ac.getName&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;IF !ac.getComputationUnit.getPackageName.emptypackage ac.getComputationUnit.getPackageName;ENDIF&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public class ac.getNameSUFFIX implements ac.getName {&#xA;/**&#xA; * Constructor of atomic component c.getName&#xA; */&#xA;public c.getNameSUFFIX(IF !dataElements.empty Map&lt;String, Object> vals ENDIF) {&#xA;FOR de : dataElements&#xA;&#x9;this._de.getName = (de.getDataType) vals.get(&quot;de.getName&quot;);&#xA;ENDFOR &#xA;}public  void  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}public  void  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}}"/>
            </componentReference>
          </composables>
          <composables xsi:type="xcore:ComponentInstance" name="accelerator2" componentType="Accelerator">
            <selectedServices name="accelerate">
              <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@composables.3/@componentReference/@dataChannels.2" order="0"/>
              <parameters xsi:type="xcore:Output" name="acceleratedSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@composables.3/@componentReference/@dataChannels.3" order="1"/>
            </selectedServices>
            <componentReference xsi:type="xcore:AtomicComponent" name="Accelerator">
              <services name="accelerate">
                <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                <parameters xsi:type="xcore:Output" name="acceleratedSpeed" dataType="Float" order="1"/>
              </services>
              <services name="decelerate">
                <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                <parameters xsi:type="xcore:Output" name="deceleratedSpeed" dataType="Float" order="1"/>
              </services>
              <computationUnit interfaceCode="/*&#xA;&#x9;&#x9;* This is Java interface of the component Accelerator&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public interface Accelerator {public  Float  accelerate (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;public  Float  decelerate (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;}" sourceCode="/*&#xA;&#x9;&#x9;* This is Java implementation of the atomic component ac.getName&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;IF !ac.getComputationUnit.getPackageName.emptypackage ac.getComputationUnit.getPackageName;ENDIF&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public class ac.getNameSUFFIX implements ac.getName {&#xA;/**&#xA; * Constructor of atomic component c.getName&#xA; */&#xA;public c.getNameSUFFIX(IF !dataElements.empty Map&lt;String, Object> vals ENDIF) {&#xA;FOR de : dataElements&#xA;&#x9;this._de.getName = (de.getDataType) vals.get(&quot;de.getName&quot;);&#xA;ENDFOR &#xA;}public  void  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}public  void  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}}"/>
            </componentReference>
          </composables>
          <connections xsi:type="xcore:CoordinationConnection" condition="speedDifference == 0" source="//@composables.2/@componentReference/@composables.3/@componentReference/@composables.0" target="//@composables.2/@componentReference/@composables.3/@componentReference/@composables.1"/>
          <connections xsi:type="xcore:CoordinationConnection" condition="speedDifference == 1" source="//@composables.2/@componentReference/@composables.3/@componentReference/@composables.0" target="//@composables.2/@componentReference/@composables.3/@componentReference/@composables.2"/>
          <dataChannels source="//@composables.2/@componentReference/@composables.3/@componentReference/@services.0/@parameters.0" target="//@composables.2/@componentReference/@composables.3/@componentReference/@composables.0/@input.0"/>
          <dataChannels source="//@composables.2/@componentReference/@composables.3/@componentReference/@services.0/@parameters.1" target="//@composables.2/@componentReference/@composables.3/@componentReference/@composables.1/@selectedServices.0/@parameters.0"/>
          <dataChannels source="//@composables.2/@componentReference/@composables.3/@componentReference/@services.0/@parameters.1" target="//@composables.2/@componentReference/@composables.3/@componentReference/@composables.2/@selectedServices.0/@parameters.0"/>
          <dataChannels source="//@composables.2/@componentReference/@composables.3/@componentReference/@composables.2/@selectedServices.0/@parameters.1" target="//@composables.2/@componentReference/@composables.3/@componentReference/@services.0/@parameters.2"/>
          <dataChannels source="//@composables.2/@componentReference/@composables.3/@componentReference/@composables.1/@selectedServices.0/@parameters.1" target="//@composables.2/@componentReference/@composables.3/@componentReference/@services.0/@parameters.2"/>
        </componentReference>
      </composables>
      <composables xsi:type="xcore:ComponentInstance" name="zoneA" componentType="Brakes">
        <selectedServices name="applyBrakes">
          <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@dataChannels.5" order="0"/>
          <parameters xsi:type="xcore:Output" name="speedAfterBrake" dataType="Float" dataChannels="//@composables.2/@componentReference/@dataChannels.12" order="1"/>
        </selectedServices>
        <componentReference xsi:type="xcore:AtomicComponent" name="Brakes">
          <services name="applyBrakes">
            <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
            <parameters xsi:type="xcore:Output" name="speedAfterBrake" dataType="Float" order="0"/>
          </services>
          <services name="applyEmergencyBrakes">
            <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
            <parameters xsi:type="xcore:Output" name="speedAfterEmergencyBrake" dataType="Float" order="0"/>
          </services>
          <computationUnit interfaceCode="/*&#xA;&#x9;&#x9;* This is Java interface of the component Brakes&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public interface Brakes {public  Float  applyBrakes (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;public  Float  applyEmergencyBrakes (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;}" sourceCode="/*&#xA;&#x9;&#x9;* This is Java implementation of the atomic component ac.getName&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;IF !ac.getComputationUnit.getPackageName.emptypackage ac.getComputationUnit.getPackageName;ENDIF&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public class ac.getNameSUFFIX implements ac.getName {&#xA;/**&#xA; * Constructor of atomic component c.getName&#xA; */&#xA;public c.getNameSUFFIX(IF !dataElements.empty Map&lt;String, Object> vals ENDIF) {&#xA;FOR de : dataElements&#xA;&#x9;this._de.getName = (de.getDataType) vals.get(&quot;de.getName&quot;);&#xA;ENDFOR &#xA;}public  outputs.get(0).getDataType.toString  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}public  outputs.get(0).getDataType.toString  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}}"/>
        </componentReference>
      </composables>
      <composables xsi:type="xcore:ComponentInstance" name="dangerZone" componentType="Brakes">
        <selectedServices name="applyEmergencyBrakes">
          <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.2/@componentReference/@dataChannels.4" order="0"/>
          <parameters xsi:type="xcore:Output" name="speedAfterEmergencyBrake" dataType="Float" dataChannels="//@composables.2/@componentReference/@dataChannels.13" order="1"/>
        </selectedServices>
        <componentReference xsi:type="xcore:AtomicComponent" name="Brakes">
          <services name="applyBrakes">
            <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
            <parameters xsi:type="xcore:Output" name="speedAfterBrake" dataType="Float" order="0"/>
          </services>
          <services name="applyEmergencyBrakes">
            <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
            <parameters xsi:type="xcore:Output" name="speedAfterEmergencyBrake" dataType="Float" order="0"/>
          </services>
          <computationUnit interfaceCode="/*&#xA;&#x9;&#x9;* This is Java interface of the component Brakes&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public interface Brakes {public  Float  applyBrakes (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;public  Float  applyEmergencyBrakes (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;}" sourceCode="/*&#xA;&#x9;&#x9;* This is Java implementation of the atomic component ac.getName&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;IF !ac.getComputationUnit.getPackageName.emptypackage ac.getComputationUnit.getPackageName;ENDIF&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public class ac.getNameSUFFIX implements ac.getName {&#xA;/**&#xA; * Constructor of atomic component c.getName&#xA; */&#xA;public c.getNameSUFFIX(IF !dataElements.empty Map&lt;String, Object> vals ENDIF) {&#xA;FOR de : dataElements&#xA;&#x9;this._de.getName = (de.getDataType) vals.get(&quot;de.getName&quot;);&#xA;ENDFOR &#xA;}public  outputs.get(0).getDataType.toString  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}public  outputs.get(0).getDataType.toString  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}}"/>
        </componentReference>
      </composables>
      <connections xsi:type="xcore:CoordinationConnection" condition="zone == 3" source="//@composables.2/@componentReference/@composables.0" target="//@composables.2/@componentReference/@composables.3"/>
      <connections xsi:type="xcore:CoordinationConnection" condition="zone == 4" source="//@composables.2/@componentReference/@composables.0" target="//@composables.2/@componentReference/@composables.2"/>
      <connections xsi:type="xcore:CoordinationConnection" condition="zone == 5" source="//@composables.2/@componentReference/@composables.0" target="//@composables.2/@componentReference/@composables.1"/>
      <connections xsi:type="xcore:CoordinationConnection" condition="zone == 2" source="//@composables.2/@componentReference/@composables.0" target="//@composables.2/@componentReference/@composables.4"/>
      <connections xsi:type="xcore:CoordinationConnection" condition="zone == 1" source="//@composables.2/@componentReference/@composables.0" target="//@composables.2/@componentReference/@composables.5"/>
      <dataChannels source="//@composables.2/@componentReference/@services.0/@parameters.0" target="//@composables.2/@componentReference/@composables.0/@input.0"/>
      <dataChannels source="//@composables.2/@componentReference/@services.0/@parameters.1" target="//@composables.2/@componentReference/@composables.3/@selectedServices.0/@parameters.0"/>
      <dataChannels source="//@composables.2/@componentReference/@services.0/@parameters.1" target="//@composables.2/@componentReference/@composables.2/@selectedServices.0/@parameters.0"/>
      <dataChannels source="//@composables.2/@componentReference/@services.0/@parameters.1" target="//@composables.2/@componentReference/@composables.1/@selectedServices.0/@parameters.0"/>
      <dataChannels source="//@composables.2/@componentReference/@services.0/@parameters.2" target="//@composables.2/@componentReference/@composables.5/@selectedServices.0/@parameters.0"/>
      <dataChannels source="//@composables.2/@componentReference/@services.0/@parameters.2" target="//@composables.2/@componentReference/@composables.4/@selectedServices.0/@parameters.0"/>
      <dataChannels source="//@composables.2/@componentReference/@services.0/@parameters.2" target="//@composables.2/@componentReference/@composables.3/@selectedServices.0/@parameters.1"/>
      <dataChannels source="//@composables.2/@componentReference/@services.0/@parameters.2" target="//@composables.2/@componentReference/@composables.2/@selectedServices.0/@parameters.1"/>
      <dataChannels source="//@composables.2/@componentReference/@services.0/@parameters.2" target="//@composables.2/@componentReference/@composables.1/@selectedServices.0/@parameters.1"/>
      <dataChannels source="//@composables.2/@componentReference/@composables.1/@selectedServices.0/@parameters.2" target="//@composables.2/@componentReference/@services.0/@parameters.3"/>
      <dataChannels source="//@composables.2/@componentReference/@composables.2/@selectedServices.0/@parameters.2" target="//@composables.2/@componentReference/@services.0/@parameters.3"/>
      <dataChannels source="//@composables.2/@componentReference/@composables.3/@selectedServices.0/@parameters.2" target="//@composables.2/@componentReference/@services.0/@parameters.3"/>
      <dataChannels source="//@composables.2/@componentReference/@composables.4/@selectedServices.0/@parameters.1" target="//@composables.2/@componentReference/@services.0/@parameters.3"/>
      <dataChannels source="//@composables.2/@componentReference/@composables.5/@selectedServices.0/@parameters.1" target="//@composables.2/@componentReference/@services.0/@parameters.3"/>
    </componentReference>
  </composables>
  <connections xsi:type="xcore:CoordinationConnection" condition="0" source="//@composables.0" target="//@composables.1"/>
  <connections xsi:type="xcore:CoordinationConnection" condition="1" source="//@composables.0"/>
  <connections xsi:type="xcore:CoordinationConnection" condition="zone == 5"/>
  <connections xsi:type="xcore:CoordinationConnection" condition="zone == 4"/>
  <connections xsi:type="xcore:CoordinationConnection" condition="zone == 3"/>
  <connections xsi:type="xcore:CoordinationConnection" condition="zone == 2"/>
  <connections xsi:type="xcore:CoordinationConnection" condition="zone == 1"/>
  <connections xsi:type="xcore:CoordinationConnection" condition="0"/>
  <connections xsi:type="xcore:CoordinationConnection" condition="1"/>
  <connections xsi:type="xcore:CoordinationConnection" condition="0"/>
  <connections xsi:type="xcore:CoordinationConnection" condition="1"/>
  <connections xsi:type="xcore:CoordinationConnection" condition="0"/>
  <connections xsi:type="xcore:CoordinationConnection" condition="1"/>
  <connections xsi:type="xcore:CoordinationConnection" condition="zone == 5"/>
  <connections xsi:type="xcore:CoordinationConnection" condition="zone == 4"/>
  <connections xsi:type="xcore:CoordinationConnection" condition="zone == 3"/>
  <connections xsi:type="xcore:CoordinationConnection" condition="1" source="//@composables.0"/>
  <connections xsi:type="xcore:CoordinationConnection" condition="1" source="//@composables.0" target="//@composables.2"/>
  <dataChannels source="//@composables.1/@selectedServices.0/@parameters.2"/>
  <dataChannels source="//@services.0/@parameters.0" target="//@composables.1/@selectedServices.0/@parameters.0"/>
  <dataChannels source="//@services.0/@parameters.1" target="//@composables.1/@selectedServices.0/@parameters.1"/>
  <dataChannels source="//@services.0/@parameters.2"/>
  <dataChannels source="//@services.0/@parameters.2"/>
  <dataChannels source="//@services.0/@parameters.2"/>
  <dataChannels source="//@services.0/@parameters.3"/>
  <dataChannels source="//@services.0/@parameters.3"/>
  <dataChannels policy="NONE_DESTRUCTIVE_READ" source="//@services.0/@parameters.3"/>
  <dataChannels source="//@services.0/@parameters.3"/>
  <dataChannels source="//@services.0/@parameters.3"/>
  <dataChannels source="//@services.0/@parameters.3"/>
  <dataChannels source="//@services.0/@parameters.3"/>
  <dataChannels source="//@services.0/@parameters.3"/>
  <dataChannels target="//@services.0/@parameters.4"/>
  <dataChannels target="//@services.0/@parameters.4"/>
  <dataChannels target="//@services.0/@parameters.4"/>
  <dataChannels target="//@services.0/@parameters.4"/>
  <dataChannels target="//@services.0/@parameters.4"/>
  <dataChannels target="//@services.0/@parameters.4"/>
  <dataChannels target="//@services.0/@parameters.4"/>
  <dataChannels target="//@services.0/@parameters.4"/>
  <dataChannels source="//@services.0/@parameters.2"/>
  <dataChannels source="//@services.0/@parameters.3"/>
  <dataChannels target="//@services.0/@parameters.4"/>
  <dataChannels source="//@services.0/@parameters.2"/>
  <dataChannels source="//@services.0/@parameters.3"/>
  <dataChannels target="//@services.0/@parameters.4"/>
  <dataChannels source="//@services.0/@parameters.2"/>
  <dataChannels source="//@services.0/@parameters.3"/>
  <dataChannels target="//@services.0/@parameters.4"/>
  <dataChannels source="//@composables.1/@selectedServices.0/@parameters.2"/>
  <dataChannels target="//@services.0/@parameters.4"/>
  <dataChannels source="//@services.0/@parameters.3"/>
  <dataChannels source="//@services.0/@parameters.2"/>
  <dataChannels source="//@services.0/@parameters.2" target="//@composables.2/@selectedServices.0/@parameters.1"/>
  <dataChannels source="//@composables.1/@selectedServices.0/@parameters.2" target="//@composables.2/@selectedServices.0/@parameters.0"/>
  <dataChannels source="//@services.0/@parameters.3" target="//@composables.2/@selectedServices.0/@parameters.2"/>
  <dataChannels source="//@composables.2/@selectedServices.0/@parameters.3" target="//@services.0/@parameters.4"/>
</xcore:CompositeComponent>
