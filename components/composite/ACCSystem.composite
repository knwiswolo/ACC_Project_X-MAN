<?xml version="1.0" encoding="ASCII"?>
<xcore:CompositeComponent xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xcore="uk.xman.xcore" name="ACCSystem">
  <services name="ACC_Service">
    <parameters xsi:type="xcore:Input" name="safetyDistance" dataType="Float" dataChannels="//@dataChannels.17" order="0"/>
    <parameters xsi:type="xcore:Input" name="cruisingSpeed" dataType="Float" dataChannels="//@dataChannels.12" order="0"/>
    <serviceReferences name="initializationComponent.initializationService" service="//@composables.1/@selectedServices.0"/>
    <serviceReferences name="speedSensor.calculateSpeedDifference" service="//@composables.2/@selectedServices.0"/>
    <serviceReferences name="speedControl.speesControlService"/>
    <serviceReferences name="speedSensor.updateSpeed" service="//@composables.2/@selectedServices.1"/>
  </services>
  <composables xsi:type="xcore:Sequencer" name="SEQUENCER" showedName="SEQUENCER" connections="//@connections.2 //@connections.3 //@connections.4 //@connections.5 //@connections.7"/>
  <composables xsi:type="xcore:ComponentInstance" name="initializationComponent" componentType="InitializationComponent">
    <selectedServices name="initializationService">
      <parameters xsi:type="xcore:Output" name="initialClearance" dataType="Float" dataChannels="//@dataChannels.1 //@dataChannels.5 //@dataChannels.13" order="0"/>
      <parameters xsi:type="xcore:Output" name="initialSpeed" dataType="Float" dataChannels="//@dataChannels.2 //@dataChannels.6 //@dataChannels.14" order="1"/>
    </selectedServices>
    <componentReference xsi:type="xcore:CompositeComponent" name="InitializationComponent">
      <services name="initializationService">
        <parameters xsi:type="xcore:Output" name="initialClearance" dataType="Float" dataChannels="//@composables.1/@componentReference/@dataChannels.0" order="0"/>
        <parameters xsi:type="xcore:Output" name="initialSpeed" dataType="Float" dataChannels="//@composables.1/@componentReference/@dataChannels.1" order="0"/>
        <serviceReferences name="radarSimulator.simulateInitialClearance" service="//@composables.1/@componentReference/@composables.0/@selectedServices.0"/>
        <serviceReferences name="speedSensor.generateSpeed" service="//@composables.1/@componentReference/@composables.1/@selectedServices.0"/>
      </services>
      <composables xsi:type="xcore:ComponentInstance" name="radarSimulator" componentType="RadarSimulator">
        <selectedServices name="simulateInitialClearance">
          <parameters xsi:type="xcore:Output" name="initialClearance" dataType="Float" dataChannels="//@composables.1/@componentReference/@dataChannels.0" order="0"/>
        </selectedServices>
        <componentReference xsi:type="xcore:AtomicComponent" name="RadarSimulator">
          <services name="simulateInitialClearance">
            <parameters xsi:type="xcore:Output" name="initialClearance" dataType="Float" order="0"/>
          </services>
          <services name="updateClearance">
            <parameters xsi:type="xcore:Input" name="clearance" dataType="Float" order="0"/>
            <parameters xsi:type="xcore:Output" name="updatedClearance" dataType="Float" order="1"/>
          </services>
          <computationUnit interfaceCode="/*&#xA;&#x9;&#x9;* This is Java interface of the component RadarSimulator&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public interface RadarSimulator {public  Float  simulateInitialClearance (&#xA; ); &#xA;public  Float  updateClearance (&#xA;    &#x9;&#x9;Float clearance&#xA;    &#x9;&#x9; ); &#xA;}" sourceCode="/*&#xA;&#x9;&#x9;* This is Java implementation of the atomic component RadarSimulator&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public class RadarSimulatorImpl implements RadarSimulator {&#xA;/**&#xA; * Constructor of atomic component RadarSimulator&#xA; */&#xA;public RadarSimulatorImpl() {&#xA;}public  Float  radarSimulator (&#xA; ) {&#xA;    &#x9;&#x9;&#x9;Float clearance = null;&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;return clearance;&#xA;    &#x9;&#x9;}}"/>
        </componentReference>
      </composables>
      <composables xsi:type="xcore:ComponentInstance" name="speedSensor" componentType="SpeedSensor">
        <selectedServices name="generateSpeed">
          <parameters xsi:type="xcore:Output" name="initialSpeed" dataType="Float" dataChannels="//@composables.1/@componentReference/@dataChannels.1" order="0"/>
        </selectedServices>
        <componentReference xsi:type="xcore:AtomicComponent" name="SpeedSensor">
          <services name="generateSpeed">
            <parameters xsi:type="xcore:Output" name="initialSpeed" dataType="Float" order="0"/>
          </services>
          <services name="calculateSpeedDifference">
            <parameters xsi:type="xcore:Input" name="cruisingSpeed" dataType="Float" order="0"/>
            <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="0"/>
            <parameters xsi:type="xcore:Output" name="speedDifference" order="0"/>
          </services>
          <services name="updateSpeed">
            <parameters xsi:type="xcore:Input" name="speed" dataType="Float" order="0"/>
            <parameters xsi:type="xcore:Output" name="updatedSpeed" dataType="Float" order="0"/>
          </services>
          <computationUnit interfaceCode="/*&#xA;&#x9;&#x9;* This is Java interface of the component SpeedSensor&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public interface SpeedSensor {public  Float  generateSpeed (&#xA; ); &#xA;public  Integer  calculateSpeedDifference (&#xA;    &#x9;&#x9;Float cruisingSpeed, &#xA;    &#x9;&#x9;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;public  Float  updateSpeed (&#xA;    &#x9;&#x9;Float speed&#xA;    &#x9;&#x9; ); &#xA;}" sourceCode="/*&#xA;&#x9;&#x9;* This is Java implementation of the atomic component SpeedSensor&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public class SpeedSensorImpl implements SpeedSensor {&#xA;/**&#xA; * Constructor of atomic component SpeedSensor&#xA; */&#xA;public SpeedSensorImpl() {&#xA;}public  Float  generateSpeed (&#xA; ) {&#xA;    &#x9;&#x9;&#x9;Float initialSpeed = null;&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;return initialSpeed;&#xA;    &#x9;&#x9;}}"/>
        </componentReference>
      </composables>
      <composables xsi:type="xcore:Sequencer" name="SEQUENCER" showedName="SEQUENCER" connections="//@composables.1/@componentReference/@connections.0 //@composables.1/@componentReference/@connections.1"/>
      <connections xsi:type="xcore:CoordinationConnection" condition="0" source="//@composables.1/@componentReference/@composables.2" target="//@composables.1/@componentReference/@composables.0"/>
      <connections xsi:type="xcore:CoordinationConnection" condition="1" source="//@composables.1/@componentReference/@composables.2" target="//@composables.1/@componentReference/@composables.1"/>
      <dataChannels source="//@composables.1/@componentReference/@composables.0/@selectedServices.0/@parameters.0" target="//@composables.1/@componentReference/@services.0/@parameters.0"/>
      <dataChannels source="//@composables.1/@componentReference/@composables.1/@selectedServices.0/@parameters.0" target="//@composables.1/@componentReference/@services.0/@parameters.1"/>
    </componentReference>
  </composables>
  <composables xsi:type="xcore:ComponentInstance" name="speedSensor" componentType="SpeedSensor">
    <selectedServices name="calculateSpeedDifference">
      <parameters xsi:type="xcore:Input" name="cruisingSpeed" dataType="Float" dataChannels="//@dataChannels.10 //@dataChannels.12" order="0"/>
      <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@dataChannels.7 //@dataChannels.9" order="1"/>
      <parameters xsi:type="xcore:Output" name="speedDifference" dataChannels="//@dataChannels.16" order="2"/>
    </selectedServices>
    <selectedServices name="updateSpeed">
      <parameters xsi:type="xcore:Input" name="speed" dataType="Float" dataChannels="//@dataChannels.7" order="0"/>
      <parameters xsi:type="xcore:Output" name="updatedSpeed" dataType="Float" dataChannels="//@dataChannels.8" order="1"/>
    </selectedServices>
    <componentReference xsi:type="xcore:AtomicComponent" name="SpeedSensor">
      <services name="generateSpeed">
        <parameters xsi:type="xcore:Output" name="initialSpeed" dataType="Float" order="0"/>
      </services>
      <services name="calculateSpeedDifference">
        <parameters xsi:type="xcore:Input" name="cruisingSpeed" dataType="Float" order="0"/>
        <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="0"/>
        <parameters xsi:type="xcore:Output" name="speedDifference" order="0"/>
      </services>
      <services name="updateSpeed">
        <parameters xsi:type="xcore:Input" name="speed" dataType="Float" order="0"/>
        <parameters xsi:type="xcore:Output" name="updatedSpeed" dataType="Float" order="0"/>
      </services>
      <computationUnit interfaceCode="/*&#xA;&#x9;&#x9;* This is Java interface of the component SpeedSensor&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public interface SpeedSensor {public  Float  generateSpeed (&#xA; ); &#xA;public  Integer  calculateSpeedDifference (&#xA;    &#x9;&#x9;Float cruisingSpeed, &#xA;    &#x9;&#x9;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;public  Float  updateSpeed (&#xA;    &#x9;&#x9;Float speed&#xA;    &#x9;&#x9; ); &#xA;}" sourceCode="/*&#xA;&#x9;&#x9;* This is Java implementation of the atomic component SpeedSensor&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public class SpeedSensorImpl implements SpeedSensor {&#xA;/**&#xA; * Constructor of atomic component SpeedSensor&#xA; */&#xA;public SpeedSensorImpl() {&#xA;}public  Float  generateSpeed (&#xA; ) {&#xA;    &#x9;&#x9;&#x9;Float initialSpeed = null;&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;return initialSpeed;&#xA;    &#x9;&#x9;}}"/>
    </componentReference>
  </composables>
  <composables xsi:type="xcore:Loop" name="LOOP" showedName="LOOP" connection="//@connections.6">
    <input name="updatedSpeed" dataType="Float" dataChannels="//@dataChannels.8 //@dataChannels.9 //@dataChannels.15" order="0"/>
  </composables>
  <composables xsi:type="xcore:ComponentInstance" name="speedControl" componentType="SpeedControl">
    <selectedServices name="speesControlService">
      <parameters xsi:type="xcore:Input" name="clearance" dataType="Float" dataChannels="//@dataChannels.13" order="0"/>
      <parameters xsi:type="xcore:Input" name="safetyDistance" dataType="Float" dataChannels="//@dataChannels.17" order="1"/>
      <parameters xsi:type="xcore:Input" name="speedDifference" dataChannels="//@dataChannels.16" order="2"/>
      <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@dataChannels.14" order="3"/>
      <parameters xsi:type="xcore:Output" name="updatedSpeed" dataType="Float" dataChannels="//@dataChannels.15" order="4"/>
    </selectedServices>
    <componentReference xsi:type="xcore:CompositeComponent" name="SpeedControl">
      <services name="speesControlService">
        <parameters xsi:type="xcore:Input" name="clearance" dataType="Float" dataChannels="//@composables.4/@componentReference/@dataChannels.1" order="0"/>
        <parameters xsi:type="xcore:Input" name="safetyDistance" dataType="Float" dataChannels="//@composables.4/@componentReference/@dataChannels.2" order="0"/>
        <parameters xsi:type="xcore:Input" name="speedDifference" dataChannels="//@composables.4/@componentReference/@dataChannels.3 //@composables.4/@componentReference/@dataChannels.4 //@composables.4/@componentReference/@dataChannels.5 //@composables.4/@componentReference/@dataChannels.22 //@composables.4/@componentReference/@dataChannels.25 //@composables.4/@componentReference/@dataChannels.28 //@composables.4/@componentReference/@dataChannels.34" order="0"/>
        <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@dataChannels.6 //@composables.4/@componentReference/@dataChannels.7 //@composables.4/@componentReference/@dataChannels.8 //@composables.4/@componentReference/@dataChannels.9 //@composables.4/@componentReference/@dataChannels.10 //@composables.4/@componentReference/@dataChannels.11 //@composables.4/@componentReference/@dataChannels.12 //@composables.4/@componentReference/@dataChannels.13 //@composables.4/@componentReference/@dataChannels.23 //@composables.4/@componentReference/@dataChannels.26 //@composables.4/@componentReference/@dataChannels.29 //@composables.4/@componentReference/@dataChannels.33" order="0"/>
        <parameters xsi:type="xcore:Output" name="updatedSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@dataChannels.14 //@composables.4/@componentReference/@dataChannels.15 //@composables.4/@componentReference/@dataChannels.16 //@composables.4/@componentReference/@dataChannels.17 //@composables.4/@componentReference/@dataChannels.18 //@composables.4/@componentReference/@dataChannels.19 //@composables.4/@componentReference/@dataChannels.20 //@composables.4/@componentReference/@dataChannels.21 //@composables.4/@componentReference/@dataChannels.24 //@composables.4/@componentReference/@dataChannels.27 //@composables.4/@componentReference/@dataChannels.30 //@composables.4/@componentReference/@dataChannels.32" order="0"/>
        <serviceReferences name="zoneCalculator.calculateZone" service="//@composables.4/@componentReference/@composables.1/@selectedServices.0"/>
        <serviceReferences name="zoneSelector.zoneSelector_Service" service="//@composables.4/@componentReference/@composables.2/@selectedServices.0"/>
      </services>
      <composables xsi:type="xcore:Sequencer" name="SEQUENCER" showedName="SEQUENCER" connections="//@composables.4/@componentReference/@connections.0 //@composables.4/@componentReference/@connections.1 //@composables.4/@componentReference/@connections.16"/>
      <composables xsi:type="xcore:ComponentInstance" name="zoneCalculator" componentType="ZoneCalculator">
        <selectedServices name="calculateZone">
          <parameters xsi:type="xcore:Input" name="clearance" dataType="Float" dataChannels="//@composables.4/@componentReference/@dataChannels.1" order="0"/>
          <parameters xsi:type="xcore:Input" name="safetyDistance" dataType="Float" dataChannels="//@composables.4/@componentReference/@dataChannels.2" order="1"/>
          <parameters xsi:type="xcore:Output" name="zone" dataChannels="//@composables.4/@componentReference/@dataChannels.0 //@composables.4/@componentReference/@dataChannels.31" order="2"/>
        </selectedServices>
        <componentReference xsi:type="xcore:AtomicComponent" name="ZoneCalculator">
          <services name="calculateZone">
            <parameters xsi:type="xcore:Input" name="clearance" dataType="Float" order="1"/>
            <parameters xsi:type="xcore:Input" name="safetyDistance" dataType="Float" order="1"/>
            <parameters xsi:type="xcore:Output" name="zone" order="1"/>
          </services>
          <computationUnit interfaceCode="/*&#xA;&#x9;&#x9;* This is Java interface of the component ZoneCalculator&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public interface ZoneCalculator {public  Integer  calculateZone (&#xA;    &#x9;&#x9;Float clearance, &#xA;    &#x9;&#x9;    &#x9;&#x9;Float safetyDistance&#xA;    &#x9;&#x9; ); &#xA;}" sourceCode="/*&#xA;&#x9;&#x9;* This is Java implementation of the atomic component ac.getName&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;IF !ac.getComputationUnit.getPackageName.emptypackage ac.getComputationUnit.getPackageName;ENDIF&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public class ac.getNameSUFFIX implements ac.getName {&#xA;/**&#xA; * Constructor of atomic component c.getName&#xA; */&#xA;public c.getNameSUFFIX(IF !dataElements.empty Map&lt;String, Object> vals ENDIF) {&#xA;FOR de : dataElements&#xA;&#x9;this._de.getName = (de.getDataType) vals.get(&quot;de.getName&quot;);&#xA;ENDFOR &#xA;}public  outputs.get(0).getDataType.toString  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}}"/>
        </componentReference>
      </composables>
      <composables xsi:type="xcore:ComponentInstance" name="zoneSelector" componentType="zoneSelector">
        <selectedServices name="zoneSelector_Service">
          <parameters xsi:type="xcore:Input" name="zone" dataChannels="//@composables.4/@componentReference/@dataChannels.31" order="0"/>
          <parameters xsi:type="xcore:Input" name="speedDifference" dataChannels="//@composables.4/@componentReference/@dataChannels.34" order="1"/>
          <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@dataChannels.33" order="2"/>
          <parameters xsi:type="xcore:Output" name="updatedSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@dataChannels.32" order="3"/>
        </selectedServices>
        <componentReference xsi:type="xcore:CompositeComponent" name="zoneSelector">
          <services name="zoneSelector_Service">
            <parameters xsi:type="xcore:Input" name="zone" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.0" order="0"/>
            <parameters xsi:type="xcore:Input" name="speedDifference" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.1 //@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.2 //@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.3" order="0"/>
            <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.4 //@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.5 //@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.6 //@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.7 //@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.8" order="0"/>
            <parameters xsi:type="xcore:Output" name="updatedSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.9 //@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.10 //@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.11 //@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.12 //@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.13" order="0"/>
            <serviceReferences name="zoneD.zoneD_Service" service="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@selectedServices.0"/>
            <serviceReferences name="zoneC.zoneC_Service" service="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@selectedServices.0"/>
            <serviceReferences name="zoneB.zoneB_Service" service="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@selectedServices.0"/>
            <serviceReferences name="zoneA.applyBrakes" service="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.4/@selectedServices.0"/>
            <serviceReferences name="dangerZone.applyEmergencyBrakes" service="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.5/@selectedServices.0"/>
          </services>
          <composables xsi:type="xcore:Selector" name="SEL_1" showedName="SEL_1" connections="//@composables.4/@componentReference/@composables.2/@componentReference/@connections.0 //@composables.4/@componentReference/@composables.2/@componentReference/@connections.1 //@composables.4/@componentReference/@composables.2/@componentReference/@connections.2 //@composables.4/@componentReference/@composables.2/@componentReference/@connections.3 //@composables.4/@componentReference/@composables.2/@componentReference/@connections.4">
            <input name="zone" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.0" order="0"/>
          </composables>
          <composables xsi:type="xcore:ComponentInstance" name="zoneD" componentType="zoneD">
            <selectedServices name="zoneD_Service">
              <parameters xsi:type="xcore:Input" name="speedDifference" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.3" order="0"/>
              <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.8" order="1"/>
              <parameters xsi:type="xcore:Output" name="updatedSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.9" order="2"/>
            </selectedServices>
            <componentReference xsi:type="xcore:CompositeComponent" name="zoneD">
              <services name="zoneD_Service">
                <parameters xsi:type="xcore:Input" name="speedDifference" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@dataChannels.0" order="0"/>
                <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@dataChannels.1 //@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@dataChannels.2" order="0"/>
                <parameters xsi:type="xcore:Output" name="updatedSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@dataChannels.3 //@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@dataChannels.4" order="0"/>
                <serviceReferences name="accelerator.decelerate" service="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@composables.1/@selectedServices.0"/>
                <serviceReferences name="accelerator.accelerate" service="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@composables.2/@selectedServices.0"/>
              </services>
              <composables xsi:type="xcore:Selector" name="SEL_1" showedName="SEL_1" connections="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@connections.0 //@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@connections.1">
                <input name="speedDifference" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@dataChannels.0" order="0"/>
              </composables>
              <composables xsi:type="xcore:ComponentInstance" name="accelerator" componentType="Accelerator">
                <selectedServices name="decelerate">
                  <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@dataChannels.1" order="0"/>
                  <parameters xsi:type="xcore:Output" name="deceleratedSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@dataChannels.4" order="1"/>
                </selectedServices>
                <componentReference xsi:type="xcore:AtomicComponent" name="Accelerator">
                  <services name="accelerate">
                    <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                    <parameters xsi:type="xcore:Output" name="acceleratedSpeed" dataType="Float" order="1"/>
                  </services>
                  <services name="decelerate">
                    <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                    <parameters xsi:type="xcore:Output" name="deceleratedSpeed" dataType="Float" order="1"/>
                  </services>
                  <computationUnit interfaceCode="/*&#xA;&#x9;&#x9;* This is Java interface of the component Accelerator&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public interface Accelerator {public  Float  accelerate (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;public  Float  decelerate (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;}" sourceCode="/*&#xA;&#x9;&#x9;* This is Java implementation of the atomic component ac.getName&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;IF !ac.getComputationUnit.getPackageName.emptypackage ac.getComputationUnit.getPackageName;ENDIF&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public class ac.getNameSUFFIX implements ac.getName {&#xA;/**&#xA; * Constructor of atomic component c.getName&#xA; */&#xA;public c.getNameSUFFIX(IF !dataElements.empty Map&lt;String, Object> vals ENDIF) {&#xA;FOR de : dataElements&#xA;&#x9;this._de.getName = (de.getDataType) vals.get(&quot;de.getName&quot;);&#xA;ENDFOR &#xA;}public  void  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}public  void  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}}"/>
                </componentReference>
              </composables>
              <composables xsi:type="xcore:ComponentInstance" name="accelerator" componentType="Accelerator">
                <selectedServices name="accelerate">
                  <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@dataChannels.2" order="0"/>
                  <parameters xsi:type="xcore:Output" name="acceleratedSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@dataChannels.3" order="1"/>
                </selectedServices>
                <componentReference xsi:type="xcore:AtomicComponent" name="Accelerator">
                  <services name="accelerate">
                    <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                    <parameters xsi:type="xcore:Output" name="acceleratedSpeed" dataType="Float" order="1"/>
                  </services>
                  <services name="decelerate">
                    <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                    <parameters xsi:type="xcore:Output" name="deceleratedSpeed" dataType="Float" order="1"/>
                  </services>
                  <computationUnit interfaceCode="/*&#xA;&#x9;&#x9;* This is Java interface of the component Accelerator&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public interface Accelerator {public  Float  accelerate (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;public  Float  decelerate (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;}" sourceCode="/*&#xA;&#x9;&#x9;* This is Java implementation of the atomic component ac.getName&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;IF !ac.getComputationUnit.getPackageName.emptypackage ac.getComputationUnit.getPackageName;ENDIF&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public class ac.getNameSUFFIX implements ac.getName {&#xA;/**&#xA; * Constructor of atomic component c.getName&#xA; */&#xA;public c.getNameSUFFIX(IF !dataElements.empty Map&lt;String, Object> vals ENDIF) {&#xA;FOR de : dataElements&#xA;&#x9;this._de.getName = (de.getDataType) vals.get(&quot;de.getName&quot;);&#xA;ENDFOR &#xA;}public  void  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}public  void  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}}"/>
                </componentReference>
              </composables>
              <connections xsi:type="xcore:CoordinationConnection" condition="0" source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@composables.0" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@composables.1"/>
              <connections xsi:type="xcore:CoordinationConnection" condition="1" source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@composables.0" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@composables.2"/>
              <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@services.0/@parameters.0" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@composables.0/@input.0"/>
              <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@services.0/@parameters.1" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@composables.1/@selectedServices.0/@parameters.0"/>
              <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@services.0/@parameters.1" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@composables.2/@selectedServices.0/@parameters.0"/>
              <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@composables.2/@selectedServices.0/@parameters.1" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@services.0/@parameters.2"/>
              <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@composables.1/@selectedServices.0/@parameters.1" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@componentReference/@services.0/@parameters.2"/>
            </componentReference>
          </composables>
          <composables xsi:type="xcore:ComponentInstance" name="zoneC" componentType="zoneC">
            <selectedServices name="zoneC_Service">
              <parameters xsi:type="xcore:Input" name="speedDifference" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.2" order="0"/>
              <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.7" order="1"/>
              <parameters xsi:type="xcore:Output" name="updatedSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.10" order="2"/>
            </selectedServices>
            <componentReference xsi:type="xcore:CompositeComponent" name="zoneC">
              <services name="zoneC_Service">
                <parameters xsi:type="xcore:Input" name="speedDifference" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@dataChannels.0" order="0"/>
                <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@dataChannels.1 //@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@dataChannels.2" order="0"/>
                <parameters xsi:type="xcore:Output" name="updatedSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@dataChannels.3 //@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@dataChannels.4" order="0"/>
                <serviceReferences name="accelerator.decelerate" service="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@composables.1/@selectedServices.0"/>
                <serviceReferences name="accelerator.accelerate" service="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@composables.2/@selectedServices.0"/>
              </services>
              <composables xsi:type="xcore:Selector" name="SEL_1" showedName="SEL_1" connections="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@connections.0 //@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@connections.1">
                <input name="speedDifference" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@dataChannels.0" order="0"/>
              </composables>
              <composables xsi:type="xcore:ComponentInstance" name="accelerator" componentType="Accelerator">
                <selectedServices name="decelerate">
                  <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@dataChannels.1" order="0"/>
                  <parameters xsi:type="xcore:Output" name="deceleratedSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@dataChannels.4" order="1"/>
                </selectedServices>
                <componentReference xsi:type="xcore:AtomicComponent" name="Accelerator">
                  <services name="accelerate">
                    <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                    <parameters xsi:type="xcore:Output" name="acceleratedSpeed" dataType="Float" order="1"/>
                  </services>
                  <services name="decelerate">
                    <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                    <parameters xsi:type="xcore:Output" name="deceleratedSpeed" dataType="Float" order="1"/>
                  </services>
                  <computationUnit interfaceCode="/*&#xA;&#x9;&#x9;* This is Java interface of the component Accelerator&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public interface Accelerator {public  Float  accelerate (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;public  Float  decelerate (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;}" sourceCode="/*&#xA;&#x9;&#x9;* This is Java implementation of the atomic component ac.getName&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;IF !ac.getComputationUnit.getPackageName.emptypackage ac.getComputationUnit.getPackageName;ENDIF&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public class ac.getNameSUFFIX implements ac.getName {&#xA;/**&#xA; * Constructor of atomic component c.getName&#xA; */&#xA;public c.getNameSUFFIX(IF !dataElements.empty Map&lt;String, Object> vals ENDIF) {&#xA;FOR de : dataElements&#xA;&#x9;this._de.getName = (de.getDataType) vals.get(&quot;de.getName&quot;);&#xA;ENDFOR &#xA;}public  void  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}public  void  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}}"/>
                </componentReference>
              </composables>
              <composables xsi:type="xcore:ComponentInstance" name="accelerator" componentType="Accelerator">
                <selectedServices name="accelerate">
                  <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@dataChannels.2" order="0"/>
                  <parameters xsi:type="xcore:Output" name="acceleratedSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@dataChannels.3" order="1"/>
                </selectedServices>
                <componentReference xsi:type="xcore:AtomicComponent" name="Accelerator">
                  <services name="accelerate">
                    <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                    <parameters xsi:type="xcore:Output" name="acceleratedSpeed" dataType="Float" order="1"/>
                  </services>
                  <services name="decelerate">
                    <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                    <parameters xsi:type="xcore:Output" name="deceleratedSpeed" dataType="Float" order="1"/>
                  </services>
                  <computationUnit interfaceCode="/*&#xA;&#x9;&#x9;* This is Java interface of the component Accelerator&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public interface Accelerator {public  Float  accelerate (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;public  Float  decelerate (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;}" sourceCode="/*&#xA;&#x9;&#x9;* This is Java implementation of the atomic component ac.getName&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;IF !ac.getComputationUnit.getPackageName.emptypackage ac.getComputationUnit.getPackageName;ENDIF&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public class ac.getNameSUFFIX implements ac.getName {&#xA;/**&#xA; * Constructor of atomic component c.getName&#xA; */&#xA;public c.getNameSUFFIX(IF !dataElements.empty Map&lt;String, Object> vals ENDIF) {&#xA;FOR de : dataElements&#xA;&#x9;this._de.getName = (de.getDataType) vals.get(&quot;de.getName&quot;);&#xA;ENDFOR &#xA;}public  void  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}public  void  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}}"/>
                </componentReference>
              </composables>
              <connections xsi:type="xcore:CoordinationConnection" condition="0" source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@composables.0" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@composables.1"/>
              <connections xsi:type="xcore:CoordinationConnection" condition="1" source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@composables.0" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@composables.2"/>
              <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@services.0/@parameters.0" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@composables.0/@input.0"/>
              <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@services.0/@parameters.1" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@composables.1/@selectedServices.0/@parameters.0"/>
              <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@services.0/@parameters.1" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@composables.2/@selectedServices.0/@parameters.0"/>
              <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@composables.2/@selectedServices.0/@parameters.1" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@services.0/@parameters.2"/>
              <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@composables.1/@selectedServices.0/@parameters.1" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@componentReference/@services.0/@parameters.2"/>
            </componentReference>
          </composables>
          <composables xsi:type="xcore:ComponentInstance" name="zoneB" componentType="zoneB">
            <selectedServices name="zoneB_Service">
              <parameters xsi:type="xcore:Input" name="speedDifference" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.1" order="0"/>
              <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.6" order="1"/>
              <parameters xsi:type="xcore:Output" name="updatedSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.11" order="2"/>
            </selectedServices>
            <componentReference xsi:type="xcore:CompositeComponent" name="zoneB">
              <services name="zoneB_Service">
                <parameters xsi:type="xcore:Input" name="speedDifference" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@dataChannels.0" order="0"/>
                <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@dataChannels.1 //@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@dataChannels.2" order="0"/>
                <parameters xsi:type="xcore:Output" name="updatedSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@dataChannels.3 //@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@dataChannels.4" order="0"/>
                <serviceReferences name="accelerator.decelerate" service="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@composables.1/@selectedServices.0"/>
                <serviceReferences name="accelerator.accelerate" service="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@composables.2/@selectedServices.0"/>
              </services>
              <composables xsi:type="xcore:Selector" name="SEL_1" showedName="SEL_1" connections="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@connections.0 //@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@connections.1">
                <input name="speedDifference" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@dataChannels.0" order="0"/>
              </composables>
              <composables xsi:type="xcore:ComponentInstance" name="accelerator" componentType="Accelerator">
                <selectedServices name="decelerate">
                  <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@dataChannels.1" order="0"/>
                  <parameters xsi:type="xcore:Output" name="deceleratedSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@dataChannels.3" order="1"/>
                </selectedServices>
                <componentReference xsi:type="xcore:AtomicComponent" name="Accelerator">
                  <services name="accelerate">
                    <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                    <parameters xsi:type="xcore:Output" name="acceleratedSpeed" dataType="Float" order="1"/>
                  </services>
                  <services name="decelerate">
                    <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                    <parameters xsi:type="xcore:Output" name="deceleratedSpeed" dataType="Float" order="1"/>
                  </services>
                  <computationUnit interfaceCode="/*&#xA;&#x9;&#x9;* This is Java interface of the component Accelerator&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public interface Accelerator {public  Float  accelerate (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;public  Float  decelerate (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;}" sourceCode="/*&#xA;&#x9;&#x9;* This is Java implementation of the atomic component ac.getName&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;IF !ac.getComputationUnit.getPackageName.emptypackage ac.getComputationUnit.getPackageName;ENDIF&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public class ac.getNameSUFFIX implements ac.getName {&#xA;/**&#xA; * Constructor of atomic component c.getName&#xA; */&#xA;public c.getNameSUFFIX(IF !dataElements.empty Map&lt;String, Object> vals ENDIF) {&#xA;FOR de : dataElements&#xA;&#x9;this._de.getName = (de.getDataType) vals.get(&quot;de.getName&quot;);&#xA;ENDFOR &#xA;}public  void  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}public  void  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}}"/>
                </componentReference>
              </composables>
              <composables xsi:type="xcore:ComponentInstance" name="accelerator" componentType="Accelerator">
                <selectedServices name="accelerate">
                  <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@dataChannels.2" order="0"/>
                  <parameters xsi:type="xcore:Output" name="acceleratedSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@dataChannels.4" order="1"/>
                </selectedServices>
                <componentReference xsi:type="xcore:AtomicComponent" name="Accelerator">
                  <services name="accelerate">
                    <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                    <parameters xsi:type="xcore:Output" name="acceleratedSpeed" dataType="Float" order="1"/>
                  </services>
                  <services name="decelerate">
                    <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                    <parameters xsi:type="xcore:Output" name="deceleratedSpeed" dataType="Float" order="1"/>
                  </services>
                  <computationUnit interfaceCode="/*&#xA;&#x9;&#x9;* This is Java interface of the component Accelerator&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public interface Accelerator {public  Float  accelerate (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;public  Float  decelerate (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;}" sourceCode="/*&#xA;&#x9;&#x9;* This is Java implementation of the atomic component ac.getName&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;IF !ac.getComputationUnit.getPackageName.emptypackage ac.getComputationUnit.getPackageName;ENDIF&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public class ac.getNameSUFFIX implements ac.getName {&#xA;/**&#xA; * Constructor of atomic component c.getName&#xA; */&#xA;public c.getNameSUFFIX(IF !dataElements.empty Map&lt;String, Object> vals ENDIF) {&#xA;FOR de : dataElements&#xA;&#x9;this._de.getName = (de.getDataType) vals.get(&quot;de.getName&quot;);&#xA;ENDFOR &#xA;}public  void  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}public  void  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}}"/>
                </componentReference>
              </composables>
              <connections xsi:type="xcore:CoordinationConnection" condition="0" source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@composables.0" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@composables.1"/>
              <connections xsi:type="xcore:CoordinationConnection" condition="1" source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@composables.0" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@composables.2"/>
              <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@services.0/@parameters.0" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@composables.0/@input.0"/>
              <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@services.0/@parameters.1" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@composables.1/@selectedServices.0/@parameters.0"/>
              <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@services.0/@parameters.1" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@composables.2/@selectedServices.0/@parameters.0"/>
              <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@composables.1/@selectedServices.0/@parameters.1" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@services.0/@parameters.2"/>
              <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@composables.2/@selectedServices.0/@parameters.1" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@componentReference/@services.0/@parameters.2"/>
            </componentReference>
          </composables>
          <composables xsi:type="xcore:ComponentInstance" name="zoneA" componentType="Brakes">
            <selectedServices name="applyBrakes">
              <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.5" order="0"/>
              <parameters xsi:type="xcore:Output" name="speedAfterBrake" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.12" order="1"/>
            </selectedServices>
            <componentReference xsi:type="xcore:AtomicComponent" name="Brakes">
              <services name="applyBrakes">
                <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                <parameters xsi:type="xcore:Output" name="speedAfterBrake" dataType="Float" order="0"/>
              </services>
              <services name="applyEmergencyBrakes">
                <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                <parameters xsi:type="xcore:Output" name="speedAfterEmergencyBrake" dataType="Float" order="0"/>
              </services>
              <computationUnit interfaceCode="/*&#xA;&#x9;&#x9;* This is Java interface of the component Brakes&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public interface Brakes {public  Float  applyBrakes (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;public  Float  applyEmergencyBrakes (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;}" sourceCode="/*&#xA;&#x9;&#x9;* This is Java implementation of the atomic component ac.getName&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;IF !ac.getComputationUnit.getPackageName.emptypackage ac.getComputationUnit.getPackageName;ENDIF&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public class ac.getNameSUFFIX implements ac.getName {&#xA;/**&#xA; * Constructor of atomic component c.getName&#xA; */&#xA;public c.getNameSUFFIX(IF !dataElements.empty Map&lt;String, Object> vals ENDIF) {&#xA;FOR de : dataElements&#xA;&#x9;this._de.getName = (de.getDataType) vals.get(&quot;de.getName&quot;);&#xA;ENDFOR &#xA;}public  outputs.get(0).getDataType.toString  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}public  outputs.get(0).getDataType.toString  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}}"/>
            </componentReference>
          </composables>
          <composables xsi:type="xcore:ComponentInstance" name="dangerZone" componentType="Brakes">
            <selectedServices name="applyEmergencyBrakes">
              <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.4" order="0"/>
              <parameters xsi:type="xcore:Output" name="speedAfterEmergencyBrake" dataType="Float" dataChannels="//@composables.4/@componentReference/@composables.2/@componentReference/@dataChannels.13" order="1"/>
            </selectedServices>
            <componentReference xsi:type="xcore:AtomicComponent" name="Brakes">
              <services name="applyBrakes">
                <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                <parameters xsi:type="xcore:Output" name="speedAfterBrake" dataType="Float" order="0"/>
              </services>
              <services name="applyEmergencyBrakes">
                <parameters xsi:type="xcore:Input" name="currentSpeed" dataType="Float" order="1"/>
                <parameters xsi:type="xcore:Output" name="speedAfterEmergencyBrake" dataType="Float" order="0"/>
              </services>
              <computationUnit interfaceCode="/*&#xA;&#x9;&#x9;* This is Java interface of the component Brakes&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public interface Brakes {public  Float  applyBrakes (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;public  Float  applyEmergencyBrakes (&#xA;    &#x9;&#x9;Float currentSpeed&#xA;    &#x9;&#x9; ); &#xA;}" sourceCode="/*&#xA;&#x9;&#x9;* This is Java implementation of the atomic component ac.getName&#xA;&#x9;&#x9;*/&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;IF !ac.getComputationUnit.getPackageName.emptypackage ac.getComputationUnit.getPackageName;ENDIF&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;import java.util.*;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public class ac.getNameSUFFIX implements ac.getName {&#xA;/**&#xA; * Constructor of atomic component c.getName&#xA; */&#xA;public c.getNameSUFFIX(IF !dataElements.empty Map&lt;String, Object> vals ENDIF) {&#xA;FOR de : dataElements&#xA;&#x9;this._de.getName = (de.getDataType) vals.get(&quot;de.getName&quot;);&#xA;ENDFOR &#xA;}public  outputs.get(0).getDataType.toString  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}public  outputs.get(0).getDataType.toString  s.getName (&#xA;    &#x9;&#x9;FOR i : inputs SEPARATOR ', '&#xA;    &#x9;&#x9;&#x9;i.getDataType.toString i.getName&#xA;    &#x9;&#x9;ENDFOR ) {&#xA;    &#x9;&#x9;&#x9;IF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;Map&lt;String, Object> returnValues = new HashMap&lt;String, Object>();&#xA;    &#x9;&#x9;&#x9;&#x9;FOR o : outputs&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;o.getDataType.toString o.getName = null;&#xA;    &#x9;&#x9;&#x9;&#x9;&#x9;returnValues.put(&quot;o.getName&quot;, o.getName);&#xA;    &#x9;&#x9;&#x9;&#x9;ENDFOR&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;outputs.get(0).getDataType.toString outputs.get(0).getName = null;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;&#x9;// TODO: auto-generated code, to be implemented by developers&#xA;    &#x9;&#x9;&#x9;IF outputs.size() == 1&#xA;    &#x9;&#x9;&#x9;&#x9;return outputs.get(0).getName;&#xA;    &#x9;&#x9;&#x9;ELSEIF outputs.size() > 1&#xA;    &#x9;&#x9;&#x9;&#x9;return returnValues;&#xA;    &#x9;&#x9;&#x9;ENDIF&#xA;    &#x9;&#x9;}}"/>
            </componentReference>
          </composables>
          <connections xsi:type="xcore:CoordinationConnection" condition="zone == 5" source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.0" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1"/>
          <connections xsi:type="xcore:CoordinationConnection" condition="zone == 4" source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.0" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2"/>
          <connections xsi:type="xcore:CoordinationConnection" condition="zone == 3" source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.0" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3"/>
          <connections xsi:type="xcore:CoordinationConnection" condition="zone == 2" source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.0" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.4"/>
          <connections xsi:type="xcore:CoordinationConnection" condition="zone == 1" source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.0" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.5"/>
          <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@services.0/@parameters.0" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.0/@input.0"/>
          <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@services.0/@parameters.1" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@selectedServices.0/@parameters.0"/>
          <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@services.0/@parameters.1" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@selectedServices.0/@parameters.0"/>
          <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@services.0/@parameters.1" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@selectedServices.0/@parameters.0"/>
          <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@services.0/@parameters.2" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.5/@selectedServices.0/@parameters.0"/>
          <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@services.0/@parameters.2" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.4/@selectedServices.0/@parameters.0"/>
          <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@services.0/@parameters.2" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@selectedServices.0/@parameters.1"/>
          <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@services.0/@parameters.2" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@selectedServices.0/@parameters.1"/>
          <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@services.0/@parameters.2" target="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@selectedServices.0/@parameters.1"/>
          <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.1/@selectedServices.0/@parameters.2" target="//@composables.4/@componentReference/@composables.2/@componentReference/@services.0/@parameters.3"/>
          <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.2/@selectedServices.0/@parameters.2" target="//@composables.4/@componentReference/@composables.2/@componentReference/@services.0/@parameters.3"/>
          <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.3/@selectedServices.0/@parameters.2" target="//@composables.4/@componentReference/@composables.2/@componentReference/@services.0/@parameters.3"/>
          <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.4/@selectedServices.0/@parameters.1" target="//@composables.4/@componentReference/@composables.2/@componentReference/@services.0/@parameters.3"/>
          <dataChannels source="//@composables.4/@componentReference/@composables.2/@componentReference/@composables.5/@selectedServices.0/@parameters.1" target="//@composables.4/@componentReference/@composables.2/@componentReference/@services.0/@parameters.3"/>
        </componentReference>
      </composables>
      <connections xsi:type="xcore:CoordinationConnection" condition="0" source="//@composables.4/@componentReference/@composables.0" target="//@composables.4/@componentReference/@composables.1"/>
      <connections xsi:type="xcore:CoordinationConnection" condition="1" source="//@composables.4/@componentReference/@composables.0"/>
      <connections xsi:type="xcore:CoordinationConnection" condition="zone == 5"/>
      <connections xsi:type="xcore:CoordinationConnection" condition="zone == 4"/>
      <connections xsi:type="xcore:CoordinationConnection" condition="zone == 3"/>
      <connections xsi:type="xcore:CoordinationConnection" condition="zone == 2"/>
      <connections xsi:type="xcore:CoordinationConnection" condition="zone == 1"/>
      <connections xsi:type="xcore:CoordinationConnection" condition="0"/>
      <connections xsi:type="xcore:CoordinationConnection" condition="1"/>
      <connections xsi:type="xcore:CoordinationConnection" condition="0"/>
      <connections xsi:type="xcore:CoordinationConnection" condition="1"/>
      <connections xsi:type="xcore:CoordinationConnection" condition="0"/>
      <connections xsi:type="xcore:CoordinationConnection" condition="1"/>
      <connections xsi:type="xcore:CoordinationConnection" condition="zone == 5"/>
      <connections xsi:type="xcore:CoordinationConnection" condition="zone == 4"/>
      <connections xsi:type="xcore:CoordinationConnection" condition="zone == 3"/>
      <connections xsi:type="xcore:CoordinationConnection" condition="1" source="//@composables.4/@componentReference/@composables.0" target="//@composables.4/@componentReference/@composables.2"/>
      <dataChannels source="//@composables.4/@componentReference/@composables.1/@selectedServices.0/@parameters.2"/>
      <dataChannels source="//@composables.4/@componentReference/@services.0/@parameters.0" target="//@composables.4/@componentReference/@composables.1/@selectedServices.0/@parameters.0"/>
      <dataChannels source="//@composables.4/@componentReference/@services.0/@parameters.1" target="//@composables.4/@componentReference/@composables.1/@selectedServices.0/@parameters.1"/>
      <dataChannels source="//@composables.4/@componentReference/@services.0/@parameters.2"/>
      <dataChannels source="//@composables.4/@componentReference/@services.0/@parameters.2"/>
      <dataChannels source="//@composables.4/@componentReference/@services.0/@parameters.2"/>
      <dataChannels source="//@composables.4/@componentReference/@services.0/@parameters.3"/>
      <dataChannels source="//@composables.4/@componentReference/@services.0/@parameters.3"/>
      <dataChannels policy="NONE_DESTRUCTIVE_READ" source="//@composables.4/@componentReference/@services.0/@parameters.3"/>
      <dataChannels source="//@composables.4/@componentReference/@services.0/@parameters.3"/>
      <dataChannels source="//@composables.4/@componentReference/@services.0/@parameters.3"/>
      <dataChannels source="//@composables.4/@componentReference/@services.0/@parameters.3"/>
      <dataChannels source="//@composables.4/@componentReference/@services.0/@parameters.3"/>
      <dataChannels source="//@composables.4/@componentReference/@services.0/@parameters.3"/>
      <dataChannels target="//@composables.4/@componentReference/@services.0/@parameters.4"/>
      <dataChannels target="//@composables.4/@componentReference/@services.0/@parameters.4"/>
      <dataChannels target="//@composables.4/@componentReference/@services.0/@parameters.4"/>
      <dataChannels target="//@composables.4/@componentReference/@services.0/@parameters.4"/>
      <dataChannels target="//@composables.4/@componentReference/@services.0/@parameters.4"/>
      <dataChannels target="//@composables.4/@componentReference/@services.0/@parameters.4"/>
      <dataChannels target="//@composables.4/@componentReference/@services.0/@parameters.4"/>
      <dataChannels target="//@composables.4/@componentReference/@services.0/@parameters.4"/>
      <dataChannels source="//@composables.4/@componentReference/@services.0/@parameters.2"/>
      <dataChannels source="//@composables.4/@componentReference/@services.0/@parameters.3"/>
      <dataChannels target="//@composables.4/@componentReference/@services.0/@parameters.4"/>
      <dataChannels source="//@composables.4/@componentReference/@services.0/@parameters.2"/>
      <dataChannels source="//@composables.4/@componentReference/@services.0/@parameters.3"/>
      <dataChannels target="//@composables.4/@componentReference/@services.0/@parameters.4"/>
      <dataChannels source="//@composables.4/@componentReference/@services.0/@parameters.2"/>
      <dataChannels source="//@composables.4/@componentReference/@services.0/@parameters.3"/>
      <dataChannels target="//@composables.4/@componentReference/@services.0/@parameters.4"/>
      <dataChannels source="//@composables.4/@componentReference/@composables.1/@selectedServices.0/@parameters.2" target="//@composables.4/@componentReference/@composables.2/@selectedServices.0/@parameters.0"/>
      <dataChannels source="//@composables.4/@componentReference/@composables.2/@selectedServices.0/@parameters.3" target="//@composables.4/@componentReference/@services.0/@parameters.4"/>
      <dataChannels source="//@composables.4/@componentReference/@services.0/@parameters.3" target="//@composables.4/@componentReference/@composables.2/@selectedServices.0/@parameters.2"/>
      <dataChannels source="//@composables.4/@componentReference/@services.0/@parameters.2" target="//@composables.4/@componentReference/@composables.2/@selectedServices.0/@parameters.1"/>
    </componentReference>
  </composables>
  <connections xsi:type="xcore:CoordinationConnection" condition="0"/>
  <connections xsi:type="xcore:CoordinationConnection" condition="1"/>
  <connections xsi:type="xcore:CoordinationConnection" condition="0" source="//@composables.0" target="//@composables.1"/>
  <connections xsi:type="xcore:CoordinationConnection" condition="1" source="//@composables.0"/>
  <connections xsi:type="xcore:CoordinationConnection" condition="1" source="//@composables.0"/>
  <connections xsi:type="xcore:CoordinationConnection" condition="2" source="//@composables.0" target="//@composables.3"/>
  <connections xsi:type="xcore:CoordinationConnection" condition="updatedSpeed > 0" source="//@composables.3" target="//@composables.2"/>
  <connections xsi:type="xcore:CoordinationConnection" condition="1" source="//@composables.0" target="//@composables.4"/>
  <dataChannels/>
  <dataChannels source="//@composables.1/@selectedServices.0/@parameters.0"/>
  <dataChannels source="//@composables.1/@selectedServices.0/@parameters.1"/>
  <dataChannels/>
  <dataChannels/>
  <dataChannels source="//@composables.1/@selectedServices.0/@parameters.0"/>
  <dataChannels source="//@composables.1/@selectedServices.0/@parameters.1"/>
  <dataChannels source="//@composables.2/@selectedServices.0/@parameters.1" target="//@composables.2/@selectedServices.1/@parameters.0"/>
  <dataChannels source="//@composables.2/@selectedServices.1/@parameters.1" target="//@composables.3/@input.0"/>
  <dataChannels source="//@composables.2/@selectedServices.0/@parameters.1" target="//@composables.3/@input.0"/>
  <dataChannels target="//@composables.2/@selectedServices.0/@parameters.0"/>
  <dataChannels/>
  <dataChannels source="//@services.0/@parameters.1" target="//@composables.2/@selectedServices.0/@parameters.0"/>
  <dataChannels source="//@composables.1/@selectedServices.0/@parameters.0" target="//@composables.4/@selectedServices.0/@parameters.0"/>
  <dataChannels source="//@composables.1/@selectedServices.0/@parameters.1" target="//@composables.4/@selectedServices.0/@parameters.3"/>
  <dataChannels source="//@composables.4/@selectedServices.0/@parameters.4" target="//@composables.3/@input.0"/>
  <dataChannels source="//@composables.2/@selectedServices.0/@parameters.2" target="//@composables.4/@selectedServices.0/@parameters.2"/>
  <dataChannels source="//@services.0/@parameters.0" target="//@composables.4/@selectedServices.0/@parameters.1"/>
</xcore:CompositeComponent>
